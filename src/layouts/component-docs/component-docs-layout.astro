---
import Layout from 'project:layouts/docs/docs-layout.astro'
import globalData from 'project:data/global.json'
import './component-docs-layout.css'

const {
	components: {
		repository: GitHubRepoURL,
		repositoryBranch: GitHubRepoBranch,
	},
	storybook: {
		homepage: storybookURL,
	},
} = globalData

const {
	git: GitHubId,
	height: StorybookPreviewHeight,
	storybook: StorybookId,
} = Object(Astro.props.content)

const html = `<style>:root{--StorybookPreviewHeight:${StorybookPreviewHeight};}</style>`
---
<Layout {...Astro.props}>
	<Fragment set:html={html} />
	<slot />
</Layout>
<script define:vars={{ GitHubId, GitHubRepoURL, GitHubRepoBranch, StorybookId, storybookURL }}>
const template = document.createElement('template')

template.innerHTML = [
	`<div class="demo-container">`,
	`<iframe id="live-sample" scrolling="yes" src="#preview"></iframe>`,
	`<div class="demo-container__sample-links">`,
		`<a href="#storybook" target="_blank" class="sample-links__storybook">Storybook</a>`,
		`<a href="#github" target="_blank" class="sample-links__github">Github</a>`,
	`</div>`,
	`</div>`
].join('')

for (const el of document.querySelectorAll('.storybook-demo')) {
	const content = template.content.cloneNode(true)

	content.querySelector('[src="#preview"]').src = `${storybookURL}iframe.html?id=${StorybookId}&viewMode=story`
	content.querySelector('[href="#storybook"]').href = `${storybookURL}?path=/story/${StorybookId}`
	content.querySelector('[href="#github"]').href = `${GitHubRepoURL}/tree/${GitHubRepoBranch}/packages/web-components/src/components/${GitHubId}`

	el.append(content)
}
</script>