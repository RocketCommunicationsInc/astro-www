---
import DocsLayout from 'project:layouts/docs/docs-layout.astro';
import { system } from 'project:utils/tokens.js';
const title = 'System Tokens';
---

<style>
	@import 'https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.83/dist/themes/light.css';
</style>
<script
	type="module"
	src="https://unpkg.com/@astrouxds/astro-web-components/dist/astro-web-components/astro-web-components.esm.js"
></script>
<script
	type="module"
	src="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.83/dist/shoelace.js"
></script>
<script
	type="module"
	src="https://unpkg.com/@astrouxds/documentation-components?module"
></script>
<DocsLayout content={{ title }}>
	<style>
		sl-tab-group {
			--indicator-color: var(--Orange700Color);
		}
		sl-tab[active]::part(base) {
			color: var(--Orange700Color);
		}
		sl-tab:hover::part(base) {
			color: var(--Orange700Color);
		}
	</style>

	<h1>System Tokens</h1>

	<sl-tab-group>
		<sl-tab slot="nav" panel="dark">Dark Theme</sl-tab>
		<sl-tab slot="nav" panel="light">Light Theme</sl-tab>

		<sl-tab-panel name="dark">
			<h2>Background Colors</h2>

			{
				system('dark', 'color', 'background').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>Text Colors</h2>

			{
				system('dark', 'color', 'text').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="text"
					/>
				))
			}

			<hr />

			<h2>Border Colors</h2>

			{
				system('dark', 'color', 'border').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="border"
					/>
				))
			}

			<hr />

			<h2>Status Colors</h2>
			{
				system('dark', 'color', 'status').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>Classification Colors</h2>
			{
				system('dark', 'color', 'classification').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}
		</sl-tab-panel>

		<sl-tab-panel name="light">
			<h2>Background Colors</h2>

			{
				system('light', 'color', 'background').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>Text Colors</h2>

			{
				system('light', 'color', 'text').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="text"
					/>
				))
			}

			<hr />

			<h2>Border Colors</h2>

			{
				system('light', 'color', 'border').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="border"
					/>
				))
			}

			<hr />

			<h2>Status Colors</h2>
			{
				system('light', 'color', 'status').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>Classification Colors</h2>
			{
				system('light', 'color', 'classification').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}
		</sl-tab-panel>
	</sl-tab-group>
</DocsLayout>
