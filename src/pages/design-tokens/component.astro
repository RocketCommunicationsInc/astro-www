---
import DocsLayout from 'project:layouts/docs/docs-layout.astro';
const title = 'Component Tokens';
import { component, lookupProperty } from 'project:utils/tokens.js';
---

<style>
	@import 'https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.83/dist/themes/light.css';
</style>
<script
	type="module"
	src="https://unpkg.com/@astrouxds/astro-web-components/dist/astro-web-components/astro-web-components.esm.js"
></script>
<script
	type="module"
	src="https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.83/dist/shoelace.js"
></script>
<script
	type="module"
	src="https://unpkg.com/@astrouxds/documentation-components?module"
></script>
<DocsLayout content={{ title }}>
	<style>
		sl-tab-group {
			--indicator-color: var(--Orange700Color);
		}
		sl-tab[active]::part(base) {
			color: var(--Orange700Color);
		}
		sl-tab:hover::part(base) {
			color: var(--Orange700Color);
		}
	</style>
	<h1>Component Tokens</h1>
	<sl-tab-group>
		<sl-tab slot="nav" panel="dark">Dark Theme</sl-tab>
		<sl-tab slot="nav" panel="light">Light Theme</sl-tab>
		<sl-tab-panel name="dark">
			<h2>Classification Banner</h2>

			{
				component('dark', 'classification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Link</h2>
			{
				component('dark', 'link').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Notification Banner</h2>

			{
				component('dark', 'notification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Status Symbol</h2>
			{
				component('dark', 'status-symbol').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Slider</h2>
			{
				component('dark', 'slider').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Global Status Bar</h2>
			{
				component('dark', 'gsb').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Switch</h2>
			{
				component('dark', 'switch').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Radio</h2>
			{
				component('dark', 'radio').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Checkbox</h2>
			{
				component('dark', 'checkbox').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Tag</h2>
			{
				component('dark', 'tag').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
			<hr />

			<h2>Scrollbar</h2>
			{
				component('dark', 'scrollbar').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Progress</h2>
			{
				component('dark', 'progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Indeterminate Progress</h2>
			{
				component('dark', 'indeterminate-progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Card</h2>
			{
				component('dark', 'card').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Container</h2>
			{
				component('dark', 'container').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
		</sl-tab-panel>
		<sl-tab-panel name="light">
			<h2>Classification Banner</h2>

			{
				component('light', 'classification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Link</h2>
			{
				component('light', 'link').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Notification Banner</h2>

			{
				component('light', 'notification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Status Symbol</h2>
			{
				component('light', 'status-symbol').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Slider</h2>
			{
				component('light', 'slider').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Global Status Bar</h2>
			{
				component('light', 'gsb').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Switch</h2>
			{
				component('light', 'switch').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Radio</h2>
			{
				component('light', 'radio').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Checkbox</h2>
			{
				component('light', 'checkbox').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Tag</h2>
			{
				component('light', 'tag').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
			<hr />

			<h2>Scrollbar</h2>
			{
				component('light', 'scrollbar').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Progress</h2>
			{
				component('light', 'progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Indeterminate Progress</h2>
			{
				component('light', 'indeterminate-progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Card</h2>
			{
				component('light', 'card').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Container</h2>
			{
				component('light', 'container').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
		</sl-tab-panel>
	</sl-tab-group>
</DocsLayout>
