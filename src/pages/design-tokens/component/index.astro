---
import DocsLayout from 'project:layouts/docs/docs-layout.astro'
import { component, lookupProperty } from 'project:utils/tokens.js'
import '../shared.css'

const title = 'Component Tokens';
---
<DocsLayout content={{ title }} file={import.meta.url}>
	<h1>
		Component Tokens
	</h1>
	<sl-tab-group>
		<sl-tab slot="nav" panel="dark">Dark Theme</sl-tab>
		<sl-tab slot="nav" panel="light">Light Theme</sl-tab>

		<sl-tab-panel name="dark">
			<h2>
				Classification Banner
			</h2>
			{
				component('dark', 'classification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Clock
			</h2>
			{
				component('dark', 'clock').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>
				Link
			</h2>
			{
				component('dark', 'link').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Log
			</h2>
			{
				component('dark', 'log').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Monitoring Icon
			</h2>
			{
				component('dark', 'monitoring-icon').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>
				Notification Banner
			</h2>
			{
				component('dark', 'notification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>Status Symbol</h2>
			{
				component('dark', 'status-symbol').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Slider
			</h2>
			{
				component('dark', 'slider').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Global Status Bar
			</h2>
			{
				component('dark', 'gsb').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Switch
			</h2>
			{
				component('dark', 'switch').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Radio
			</h2>
			{
				component('dark', 'radio').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Checkbox
			</h2>
			{
				component('dark', 'checkbox').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Tag
			</h2>
			{
				component('dark', 'tag').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
			<hr />

			<h2>
				Scrollbar
			</h2>
			{
				component('dark', 'scrollbar').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Progress
			</h2>
			{
				component('dark', 'progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Indeterminate Progress
			</h2>
			{
				component('dark', 'indeterminate-progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Card
			</h2>
			{
				component('dark', 'card').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Container
			</h2>
			{
				component('dark', 'container').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
			<hr />

			<h2>
				Tooltip
			</h2>
			{
				component('dark', 'tooltip').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
		</sl-tab-panel>

		<sl-tab-panel name="light">
			<h2>
				Classification Banner
			</h2>
			{
				component('light', 'classification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Clock
			</h2>
			{
				component('light', 'clock').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>
				Link
			</h2>
			{
				component('light', 'link').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Log
			</h2>
			{
				component('light', 'log').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Monitoring Icon
			</h2>
			{
				component('light', 'monitoring-icon').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type="background"
					/>
				))
			}

			<hr />

			<h2>
				Notification Banner
			</h2>
			{
				component('light', 'notification-banner').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Status Symbol
			</h2>
			{
				component('light', 'status-symbol').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Slider
			</h2>
			{
				component('light', 'slider').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Global Status Bar
			</h2>
			{
				component('light', 'gsb').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Switch
			</h2>
			{
				component('light', 'switch').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Radio
			</h2>
			{
				component('light', 'radio').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Checkbox
			</h2>
			{
				component('light', 'checkbox').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Tag
			</h2>
			{
				component('light', 'tag').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
			<hr />

			<h2>
				Scrollbar
			</h2>
			{
				component('light', 'scrollbar').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Progress
			</h2>
			{
				component('light', 'progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Indeterminate Progress
			</h2>
			{
				component('light', 'indeterminate-progress').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Card
			</h2>
			{
				component('light', 'card').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}

			<hr />

			<h2>
				Container
			</h2>
			{
				component('light', 'container').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
			<h2>
				Tooltip
			</h2>
			{
				component('light', 'tooltip').map((token) => (
					<rux-design-token-preview
						name={token.name}
						value={token.value}
						alias={token.referenceToken}
						description={token.description}
						type={lookupProperty(token.category, token.property)}
					/>
				))
			}
		</sl-tab-panel>
	</sl-tab-group>
</DocsLayout>
<script>
	import 'https://cdn.jsdelivr.net/npm/@astrouxds/astro-web-components/dist/astro-web-components/astro-web-components.esm.js'
	import 'https://cdn.jsdelivr.net/npm/@astrouxds/documentation-components@0.0.13/+esm'
	import 'https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0/dist/shoelace.js'
</script>
<style is:global>
	@import "https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0/dist/themes/light.css";
</style>