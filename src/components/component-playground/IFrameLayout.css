@import "project:layouts/default/style/ui-monospace.css";
@import "project:layouts/default/style/sanitize.css";
@import "project:layouts/default/style/variables.css";
@import "project:components/component-playground/Control/Slots.css";

/* Baseline */

:where(:root) {
	/* Layout */
	overflow: hidden;

	/* Text */
	font-family: "Helvetica", var(--SystemType);
}

:where(:root, html, body, main.app) {
	@media (width > 700px) {
		/* Layout */
		block-size: 100%;
	}

	@media (width <= 700px) {
		/* Layout */
		block-size: auto;
	}
}

:where(h1, h2, h3, h4, h5, h6) {
	/* Layout */
	margin-block: 0;

	/* Text */
	font-size: inherit;
	font-weight: inherit;
}

:where(input) {
	/* Layout */
	margin: 0;
	padding: 0;

	/* Text */
	font: inherit;

	/* Appearance */
	background-color: transparent;
	color: inherit;
	border-width: 0;
}

:where(select) {
	/* Layout */
	margin: 0;

	/* Text */
	font: inherit;
	letter-spacing: inherit;
	text-align: inherit;
	text-transform: inherit;
	white-space: inherit;
	word-spacing: inherit;

	/* Appearance */
	appearance: none;
	background-color: transparent;
	border-style: none;

	/* Appearance */
	color: inherit;
}

/* Patterns */

:where(:root) {
	--BackColor: Canvas;
	--FillColor: CanvasText;
	--TextColor: var(--FillColor);
	--EdgeColor: var(--FillColor);
	--EdgeSize: 1px;

	/* Radius Reference */
	--EdgeRadius: 3px;
	--RadiusBase: 3px;
	--RadiusRound: 9e9px;
}

:where(svg) {
	fill: var(--FillColor);
}

/* Application */

.app {
	display: grid;

	/* Layout */
	gap: 1px;
	min-block-size: 68--step;
	overflow: hidden;
	padding: 1px;

	/* Appearance */
	background-color: var(--EdgeColor);
	border-radius: var(--EdgeRadius);
	box-shadow: var(--EdgeColor) 0 0 0 var(--EdgeSize) inset;

	/* Reference */
	--EdgeColor: var(--Grey600Color);
	--EdgeSizeInner: calc(var(--EdgeRadius) - var(--EdgeSize));

	@media (width <= 700px) {
		/* Layout */
		grid-template-rows: 80--step auto;

		/* Reference */
		--max-height: 400px;

		& .panel-nav-area {
			display: none;
		}
	}

	@media (width > 700px) {
		/* Layout */
		grid-template-columns: auto max-content max-content;
		overflow: initial;

		/* Reference */
		--max-height: 100%;
	}

	& .sandbox-area,
	& .control-area,
	& .panel-nav-area {
		display: grid;

		/* Layout */
		block-size: 100%;
		grid-auto-rows: auto 1fr;
		overflow: hidden;

		/* Appearance */
		background-color: var(--Neutral000Color);
		color: var(--Grey900Color);
	}

	& .sandbox-area {
		@media (width < 700px) {
			border-start-start-radius: var(--EdgeSizeInner);
			border-start-end-radius: var(--EdgeSizeInner);
		}

		@media (width >= 700px) {
			border-start-start-radius: var(--EdgeSizeInner);
			border-end-start-radius: var(--EdgeSizeInner);
		}
	}

	& .control-area {
		/* Layout */
		max-block-size: var(--max-height);

		@media (width < 700px) {
			border-end-start-radius: var(--EdgeSizeInner);
			border-end-end-radius: var(--EdgeSizeInner);

			/* Layout */
			overflow: initial;
		}

		@media (width >= 700px) {
			/* Layout */
			grid-auto-rows: minmax(0, 1fr);
		}
	}

	& .panel-nav-area {
		@media (width >= 700px) {
			/* Layout */
			border-start-end-radius: var(--EdgeSizeInner);
			border-end-end-radius: var(--EdgeSizeInner);
		}

		@media (width < 700px) {
			display: none;
		}
	}
}

a-panel + a-panel {
	@media (width >= 700px) {
		/* Layout */
		box-shadow: var(--Grey600Color) 0 -1px 0 0;
	}
}

:is(:focus-visible):not(a-switch) {
	/* Appearance */
	border-radius: var(--EdgeRadius);
	outline: 1--rpx solid var(--FocusDark);
	outline-offset: 2--rpx;
}
