---
import { For, When } from '@astropub/flow'
import { markdown } from '@astropub/md'
import './compliance.css'
export interface Props {
compliance: typeof import('project:data/compliance.json')
}

const { isArray } = Array
const toNumeral = (content: any, ruleset: any, rule: any) => [ content.numeral, ruleset.numeral, rule.numeral].join('.')
const toStatusClass = (rule: any) => `status -${rule.status}`

const props = Astro.props as Props

const currentPathname: any = Astro.url.pathname
const contents = props.compliance.contents
const shouldDisplayCompliance = contents.find(
	content => content.rulesets?.find(
		ruleset => ruleset.link === currentPathname
	)
)
---
<When {shouldDisplayCompliance}>
<aside class="compliance">
	<header>
		<span class="compliance-header">Compliance Requirements</span>
		<span class="compliance-version">(v{props.compliance.version })</span>
	</header>
	<br />
	<For of={props.compliance.contents}>{content => (
		<section class="p-compliance">
			<When {isArray(content.rulesets)}>
				<For of={content.rulesets!}>{ruleset => (
					<When {ruleset.link === currentPathname}>
						<section class="ruleset">
							<When {isArray(ruleset.rules!)}>
								<For of={ruleset.rules!}>{rule =>(
									<dl class="rule-aside">
										<dd class="numeral">{toNumeral(content, ruleset, rule)}</dd>
										<div class="rule-text">
											<dt class="rule-aside">{markdown(rule.rule)}</dt>
											<When {rule.status !=='current' } {rule.status !=='updated'} {rule.status !=='under-review' }>
												<dd class={toStatusClass(rule)}>{rule.status}</dd>
											</When>
										</div>
									</dl>
								)}</For>
							</When>
						</section>
					</When>
				)}</For>
			</When>
		</section>
		)}
	</For>
	<footer>
		<a href="/compliance/">See all EGS Compliance Requirements</a>
	</footer>
</aside>
</When>