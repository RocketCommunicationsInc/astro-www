---
import type { Type } from 'project:data/types.d.ts'

import { Sanitizer } from 'project:utils/sanitizer.js'
import { For } from '@astropub/flow'
import { when } from 'project:utils/when'
import * as utils from './home-community-events.utils.ts'
import eventToggleHandler from './home-community-events.eventToggleHandler.js?url'
import calendarEvents from 'project:data/google/google-calendar-events'

export type Props = Type<'HomeCommmunityEvents'>

const attrs = Astro.props

const sanitizer = new Sanitizer()
---
<section class="p-community-events">
	<h4>{
		attrs.heading.data
	}</h4>
	<div class="p-community-events-content">
		<For of={calendarEvents}>{calendarEvent => (
			<article class="p-community-event">
				<hgroup class="p-community-event-heading">
					<h5>{
						calendarEvent.summary
					}</h5>
				</hgroup>

				<span class="p-community-event-info">
					<small class="p-community-event-date">
						{
							calendarEvent.start.date && calendarEvent.end.date
								? (
									<Fragment>
										<span class="-date">{
											utils.getDateRange(calendarEvent.start.date, calendarEvent.end.date)
										}</span>

										{when(utils.isAllDay(calendarEvent.start.date, calendarEvent.end.date), () => (
											<span class="-time">{
												attrs.allday.data
											}</span>
										))}
									</Fragment>
								)
							: (
								<span class="-date">{
									utils.getDate(calendarEvent.start.dateTime!)
								}</span>
								
								<span class="-time"> {
									utils.getTime(calendarEvent.start.dateTime!)
								}</span>
							)
						}
					</small>

					{when(calendarEvent.location, location => (
						<span class='-second-col'>
							<span class="p-community-event-subheading">{
								location
							}</span>
						</span>
					))}
				</span>

				{when(calendarEvent.description, description => (
					<span class="p-community-event-actions">
						<button>{
							attrs.action.data
						}</button>
					</span>

					<span class="p-community-event-details" set:html={sanitizer.sanitizeFor('div', description)} />
				))}
			</article><script src={eventToggleHandler} defer />
		)}</For>
	</div>
</section>